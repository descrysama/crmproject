// <auto-generated />
using System;
using BluePillCRM.Datas;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BluePillCRM.Datas.Migrations
{
    [DbContext(typeof(BluePillCRMDbContext))]
    [Migration("20230726193942_updateDecimal")]
    partial class updateDecimal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_unicode_ci")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int")
                        .HasColumnName("access_level");

                    b.Property<int?>("AccountType")
                        .HasColumnType("int")
                        .HasColumnName("account_type");

                    b.Property<int?>("BillingAddressId")
                        .HasColumnType("int")
                        .HasColumnName("billing_address_id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("company_name");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("DeliveryAddressId")
                        .HasColumnType("int")
                        .HasColumnName("delivery_address_id");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("MainEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("main_email");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("owner_id");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int")
                        .HasColumnName("payment_method_id");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Siret")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("siret");

                    b.Property<string>("TvaNumber")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("tva_number");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("WebsiteUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("website_url");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccessLevel" }, "access_level");

                    b.HasIndex(new[] { "AccountType" }, "account_type");

                    b.HasIndex(new[] { "BillingAddressId" }, "billing_address_id");

                    b.HasIndex(new[] { "CreatedBy" }, "created_by");

                    b.HasIndex(new[] { "DeliveryAddressId" }, "delivery_address_id");

                    b.HasIndex(new[] { "LastModifiedBy" }, "last_modified_by");

                    b.HasIndex(new[] { "OwnerId" }, "owner_id");

                    b.HasIndex(new[] { "PaymentMethodId" }, "payment_method_id");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("account_types", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int")
                        .HasColumnName("access_level");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("city");

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("country_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("postal_code");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("street");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CountryId" }, "address");

                    b.ToTable("address", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int")
                        .HasColumnName("access_level");

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("email");

                    b.Property<string>("EnterprisePhone")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("enterprise_phone");

                    b.Property<bool>("IsDeactivated")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deactivated");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("mobile_phone");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("owner_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccessLevel" }, "access_level")
                        .HasDatabaseName("access_level1");

                    b.HasIndex(new[] { "AccountId" }, "account_id");

                    b.HasIndex(new[] { "CreatedBy" }, "created_by")
                        .HasDatabaseName("created_by1");

                    b.HasIndex(new[] { "ModifiedBy" }, "modified_by");

                    b.HasIndex(new[] { "OwnerId" }, "owner_id")
                        .HasDatabaseName("owner_id1");

                    b.ToTable("contacts", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("country_code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("country", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.CrmConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("MaxAccounts")
                        .HasColumnType("int")
                        .HasColumnName("max_accounts");

                    b.Property<int>("MaxContacts")
                        .HasColumnType("int")
                        .HasColumnName("max_contacts");

                    b.Property<int>("MaxUsers")
                        .HasColumnType("int")
                        .HasColumnName("max_users");

                    b.Property<decimal>("MonthlyCost")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("monthly_cost");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("crm_config", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int")
                        .HasColumnName("access_level");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    b.Property<int>("CreatedAt")
                        .HasColumnType("int")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal>("DiscountPercentage")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("discount_percentage");

                    b.Property<string>("EmailToSendAt")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("email_to_send_at");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime")
                        .HasColumnName("invoice_date");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("invoice_number");

                    b.Property<bool>("InvoiceStatus")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("invoice_status");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int")
                        .HasColumnName("orders_id");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int")
                        .HasColumnName("payment_method");

                    b.Property<int>("SendMethodId")
                        .HasColumnType("int")
                        .HasColumnName("send_method_id");

                    b.Property<decimal>("TotalAmountWithTaxWithDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_with_tax_with_discount");

                    b.Property<decimal>("TotalAmountWithoutTax")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_without_tax");

                    b.Property<decimal>("TotalAmountWithoutTaxWithDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_without_tax_with_discount");

                    b.Property<decimal>("TotalTaxAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_tax_amount");

                    b.Property<string>("TransactionCurrency")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("transaction_currency");

                    b.Property<int>("UpdatedAt")
                        .HasColumnType("int")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccessLevel" }, "access_level")
                        .HasDatabaseName("access_level2");

                    b.HasIndex(new[] { "AccountId" }, "account_id")
                        .HasDatabaseName("account_id1");

                    b.HasIndex(new[] { "ContactId" }, "contact_id");

                    b.HasIndex(new[] { "CreatedBy" }, "created_by")
                        .HasDatabaseName("created_by2");

                    b.HasIndex(new[] { "OrdersId" }, "orders_id");

                    b.HasIndex(new[] { "PaymentMethod" }, "payment_method");

                    b.HasIndex(new[] { "SendMethodId" }, "send_method_id");

                    b.HasIndex(new[] { "UpdatedBy" }, "updated_by");

                    b.ToTable("invoices", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.InvoicesProduct", b =>
                {
                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("description");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("discount_percentage");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("InvoicesId")
                        .HasColumnType("int")
                        .HasColumnName("invoices_id");

                    b.Property<string>("OutOfCatalogProduct")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("out_of_catalog_product");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("TaxesId")
                        .HasColumnType("int")
                        .HasColumnName("taxes_id");

                    b.Property<decimal?>("TotalAmountWithTaxWithDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_with_tax_with_discount");

                    b.Property<decimal?>("TotalAmountWithoutTax")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_without_tax");

                    b.Property<decimal?>("TotalAmountWithoutTaxWithDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_without_tax_with_discount");

                    b.Property<decimal?>("TotalTaxAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_tax_amount");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasIndex(new[] { "CreatedBy" }, "created_by");

                    b.HasIndex(new[] { "InvoicesId" }, "invoices_id");

                    b.HasIndex(new[] { "ProductId" }, "product_id");

                    b.HasIndex(new[] { "TaxesId" }, "taxes_id");

                    b.HasIndex(new[] { "UpdatedBy" }, "updated_by");

                    b.ToTable("invoices_products", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int")
                        .HasColumnName("access_level");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<float>("DiscountPercentage")
                        .HasColumnType("float")
                        .HasColumnName("discount_percentage");

                    b.Property<string>("EmailToSendAt")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("email_to_send_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime")
                        .HasColumnName("order_date");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("order_number");

                    b.Property<bool>("OrderStatus")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("order_status");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int")
                        .HasColumnName("payment_method");

                    b.Property<int>("QuoteId")
                        .HasColumnType("int")
                        .HasColumnName("quote_id");

                    b.Property<int?>("SendMethodId")
                        .HasColumnType("int")
                        .HasColumnName("send_method_id");

                    b.Property<int>("TaxesId")
                        .HasColumnType("int")
                        .HasColumnName("taxes_id");

                    b.Property<decimal>("TotalAmountWithTaxWithDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_with_tax_with_discount");

                    b.Property<decimal>("TotalAmountWithoutTax")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_without_tax");

                    b.Property<decimal>("TotalAmountWithoutTaxWithDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_without_tax_with_discount");

                    b.Property<decimal>("TotalTaxAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_tax_amount");

                    b.Property<string>("TransactionCurrency")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("transaction_currency");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccessLevel" }, "access_level")
                        .HasDatabaseName("access_level3");

                    b.HasIndex(new[] { "AccountId" }, "account_id")
                        .HasDatabaseName("account_id2");

                    b.HasIndex(new[] { "ContactId" }, "contact_id")
                        .HasDatabaseName("contact_id1");

                    b.HasIndex(new[] { "CreatedBy" }, "created_by")
                        .HasDatabaseName("created_by3");

                    b.HasIndex(new[] { "ModifiedBy" }, "modified_by")
                        .HasDatabaseName("modified_by1");

                    b.HasIndex(new[] { "PaymentMethod" }, "payment_method")
                        .HasDatabaseName("payment_method1");

                    b.HasIndex(new[] { "QuoteId" }, "quote_id");

                    b.HasIndex(new[] { "SendMethodId" }, "send_method_id")
                        .HasDatabaseName("send_method_id1");

                    b.HasIndex(new[] { "TaxesId" }, "taxes_id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.OrdersProduct", b =>
                {
                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("description");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("discount_percentage");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int")
                        .HasColumnName("orders_id");

                    b.Property<string>("OutOfCatalogProduct")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("out_of_catalog_product");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("TaxesId")
                        .HasColumnType("int")
                        .HasColumnName("taxes_id");

                    b.Property<decimal?>("TotalAmountWithTaxWithDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_with_tax_with_discount");

                    b.Property<decimal?>("TotalAmountWithoutTax")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_without_tax");

                    b.Property<decimal?>("TotalAmountWithoutTaxWithDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_without_tax_with_discount");

                    b.Property<decimal?>("TotalTaxAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_tax_amount");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasIndex(new[] { "CreatedBy" }, "created_by");

                    b.HasIndex(new[] { "OrdersId" }, "orders_id");

                    b.HasIndex(new[] { "ProductId" }, "product_id");

                    b.HasIndex(new[] { "TaxesId" }, "taxes_id");

                    b.HasIndex(new[] { "UpdatedBy" }, "updated_by");

                    b.ToTable("orders_products", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("payment_methods", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("description");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_disabled");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("product_name");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("serial_number");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CreatedBy" }, "created_by")
                        .HasDatabaseName("created_by4");

                    b.HasIndex(new[] { "UpdatedBy" }, "updated_by")
                        .HasDatabaseName("updated_by1");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int")
                        .HasColumnName("access_level");

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("EmailSendTo")
                        .HasColumnType("int")
                        .HasColumnName("email_send_to");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int")
                        .HasColumnName("payment_method");

                    b.Property<string>("QuoteNumber")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("quote_number");

                    b.Property<bool>("QuoteStatus")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("quote_status");

                    b.Property<int?>("SendMethodId")
                        .HasColumnType("int")
                        .HasColumnName("send_method_id");

                    b.Property<DateTime?>("SendQuoteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("send_quote_date");

                    b.Property<int>("TaxesId")
                        .HasColumnType("int")
                        .HasColumnName("taxes_id");

                    b.Property<decimal>("TotalTaxAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_tax_amount");

                    b.Property<int>("TotalWithTaxWithDiscount")
                        .HasColumnType("int")
                        .HasColumnName("total_with_tax_with_discount");

                    b.Property<decimal>("TotalWithoutTaxWithDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_without_tax_with_discount");

                    b.Property<string>("TransactionCurency")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("transaction_curency");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccessLevel" }, "access_level")
                        .HasDatabaseName("access_level4");

                    b.HasIndex(new[] { "AccountId" }, "account_id")
                        .HasDatabaseName("account_id3");

                    b.HasIndex(new[] { "ContactId" }, "contact_id")
                        .HasDatabaseName("contact_id2");

                    b.HasIndex(new[] { "CreatedBy" }, "created_by")
                        .HasDatabaseName("created_by5");

                    b.HasIndex(new[] { "PaymentMethod" }, "payment_method")
                        .HasDatabaseName("payment_method2");

                    b.HasIndex(new[] { "SendMethodId" }, "send_method_id")
                        .HasDatabaseName("send_method_id2");

                    b.HasIndex(new[] { "TaxesId" }, "taxes_id")
                        .HasDatabaseName("taxes_id1");

                    b.HasIndex(new[] { "UpdatedBy" }, "updated_by")
                        .HasDatabaseName("updated_by2");

                    b.ToTable("quotes", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.QuotesProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("description");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("discount_percentage");

                    b.Property<string>("OutOfCatalogProduct")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("out_of_catalog_product");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("QuoteId")
                        .HasColumnType("int")
                        .HasColumnName("quote_id");

                    b.Property<int>("TaxesId")
                        .HasColumnType("int")
                        .HasColumnName("taxes_id");

                    b.Property<decimal?>("TotalAmountWithTaxWithDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_with_tax_with_discount");

                    b.Property<decimal?>("TotalAmountWithoutTax")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_without_tax");

                    b.Property<decimal?>("TotalAmountWithoutTaxWithDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount_without_tax_with_discount");

                    b.Property<decimal?>("TotalTaxAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_tax_amount");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CreatedBy" }, "created_by")
                        .HasDatabaseName("created_by6");

                    b.HasIndex(new[] { "ProductId" }, "product_id");

                    b.HasIndex(new[] { "QuoteId" }, "quote_id")
                        .HasDatabaseName("quote_id1");

                    b.HasIndex(new[] { "TaxesId" }, "taxes_id")
                        .HasDatabaseName("taxes_id2");

                    b.HasIndex(new[] { "UpdatedBy" }, "updated_by")
                        .HasDatabaseName("updated_by3");

                    b.ToTable("quotes_products", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.SendMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("send_method", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Taxis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<float>("Percentage")
                        .HasColumnType("float")
                        .HasColumnName("percentage");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("taxes", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("email");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_disabled");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("last_name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("password");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RoleId" }, "role_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Account", b =>
                {
                    b.HasOne("BluePillCRM.Datas.Entities.Role", "AccessLevelNavigation")
                        .WithMany("Accounts")
                        .HasForeignKey("AccessLevel")
                        .IsRequired()
                        .HasConstraintName("accounts_ibfk_6");

                    b.HasOne("BluePillCRM.Datas.Entities.AccountType", "AccountTypeNavigation")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountType")
                        .HasConstraintName("accounts_ibfk_1");

                    b.HasOne("BluePillCRM.Datas.Entities.Address", "BillingAddress")
                        .WithMany("AccountBillingAddresses")
                        .HasForeignKey("BillingAddressId")
                        .HasConstraintName("accounts_ibfk_4");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "CreatedByNavigation")
                        .WithMany("AccountCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("accounts_ibfk_8");

                    b.HasOne("BluePillCRM.Datas.Entities.Address", "DeliveryAddress")
                        .WithMany("AccountDeliveryAddresses")
                        .HasForeignKey("DeliveryAddressId")
                        .HasConstraintName("accounts_ibfk_3");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "LastModifiedByNavigation")
                        .WithMany("AccountLastModifiedByNavigations")
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("accounts_ibfk_7");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "Owner")
                        .WithMany("AccountOwners")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("accounts_ibfk_5");

                    b.HasOne("BluePillCRM.Datas.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany("Accounts")
                        .HasForeignKey("PaymentMethodId")
                        .HasConstraintName("accounts_ibfk_2");

                    b.Navigation("AccessLevelNavigation");

                    b.Navigation("AccountTypeNavigation");

                    b.Navigation("BillingAddress");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("DeliveryAddress");

                    b.Navigation("LastModifiedByNavigation");

                    b.Navigation("Owner");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Address", b =>
                {
                    b.HasOne("BluePillCRM.Datas.Entities.Country", "Country")
                        .WithMany("Addresses")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("address_ibfk_1");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Contact", b =>
                {
                    b.HasOne("BluePillCRM.Datas.Entities.Role", "AccessLevelNavigation")
                        .WithMany("Contacts")
                        .HasForeignKey("AccessLevel")
                        .IsRequired()
                        .HasConstraintName("contacts_ibfk_3");

                    b.HasOne("BluePillCRM.Datas.Entities.Account", "Account")
                        .WithMany("Contacts")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("contacts_ibfk_1");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "CreatedByNavigation")
                        .WithMany("ContactCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("contacts_ibfk_4");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "ModifiedByNavigation")
                        .WithMany("ContactModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("contacts_ibfk_5");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "Owner")
                        .WithMany("ContactOwners")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("contacts_ibfk_2");

                    b.Navigation("AccessLevelNavigation");

                    b.Navigation("Account");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Invoice", b =>
                {
                    b.HasOne("BluePillCRM.Datas.Entities.Role", "AccessLevelNavigation")
                        .WithMany("Invoices")
                        .HasForeignKey("AccessLevel")
                        .IsRequired()
                        .HasConstraintName("invoices_ibfk_5");

                    b.HasOne("BluePillCRM.Datas.Entities.Account", "Account")
                        .WithMany("Invoices")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("invoices_ibfk_2");

                    b.HasOne("BluePillCRM.Datas.Entities.Contact", "Contact")
                        .WithMany("Invoices")
                        .HasForeignKey("ContactId")
                        .HasConstraintName("invoices_ibfk_3");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "CreatedByNavigation")
                        .WithMany("InvoiceCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("invoices_ibfk_6");

                    b.HasOne("BluePillCRM.Datas.Entities.Order", "Orders")
                        .WithMany("Invoices")
                        .HasForeignKey("OrdersId")
                        .IsRequired()
                        .HasConstraintName("invoices_ibfk_1");

                    b.HasOne("BluePillCRM.Datas.Entities.PaymentMethod", "PaymentMethodNavigation")
                        .WithMany("Invoices")
                        .HasForeignKey("PaymentMethod")
                        .IsRequired()
                        .HasConstraintName("invoices_ibfk_4");

                    b.HasOne("BluePillCRM.Datas.Entities.SendMethod", "SendMethod")
                        .WithMany("Invoices")
                        .HasForeignKey("SendMethodId")
                        .IsRequired()
                        .HasConstraintName("invoices_ibfk_8");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "UpdatedByNavigation")
                        .WithMany("InvoiceUpdatedByNavigations")
                        .HasForeignKey("UpdatedBy")
                        .IsRequired()
                        .HasConstraintName("invoices_ibfk_7");

                    b.Navigation("AccessLevelNavigation");

                    b.Navigation("Account");

                    b.Navigation("Contact");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Orders");

                    b.Navigation("PaymentMethodNavigation");

                    b.Navigation("SendMethod");

                    b.Navigation("UpdatedByNavigation");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.InvoicesProduct", b =>
                {
                    b.HasOne("BluePillCRM.Datas.Entities.User", "CreatedByNavigation")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("invoices_products_ibfk_4");

                    b.HasOne("BluePillCRM.Datas.Entities.Invoice", "Invoices")
                        .WithMany()
                        .HasForeignKey("InvoicesId")
                        .IsRequired()
                        .HasConstraintName("invoices_products_ibfk_1");

                    b.HasOne("BluePillCRM.Datas.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("invoices_products_ibfk_2");

                    b.HasOne("BluePillCRM.Datas.Entities.Taxis", "Taxes")
                        .WithMany()
                        .HasForeignKey("TaxesId")
                        .IsRequired()
                        .HasConstraintName("invoices_products_ibfk_3");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "UpdatedByNavigation")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .HasConstraintName("invoices_products_ibfk_5");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Invoices");

                    b.Navigation("Product");

                    b.Navigation("Taxes");

                    b.Navigation("UpdatedByNavigation");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Order", b =>
                {
                    b.HasOne("BluePillCRM.Datas.Entities.Role", "AccessLevelNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("AccessLevel")
                        .IsRequired()
                        .HasConstraintName("orders_ibfk_8");

                    b.HasOne("BluePillCRM.Datas.Entities.Account", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("orders_ibfk_2");

                    b.HasOne("BluePillCRM.Datas.Entities.Contact", "Contact")
                        .WithMany("Orders")
                        .HasForeignKey("ContactId")
                        .HasConstraintName("orders_ibfk_3");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "CreatedByNavigation")
                        .WithMany("OrderCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("orders_ibfk_10");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "ModifiedByNavigation")
                        .WithMany("OrderModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("orders_ibfk_9");

                    b.HasOne("BluePillCRM.Datas.Entities.PaymentMethod", "PaymentMethodNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentMethod")
                        .IsRequired()
                        .HasConstraintName("orders_ibfk_6");

                    b.HasOne("BluePillCRM.Datas.Entities.Quote", "Quote")
                        .WithMany("Orders")
                        .HasForeignKey("QuoteId")
                        .IsRequired()
                        .HasConstraintName("orders_ibfk_1");

                    b.HasOne("BluePillCRM.Datas.Entities.SendMethod", "SendMethod")
                        .WithMany("Orders")
                        .HasForeignKey("SendMethodId")
                        .HasConstraintName("orders_ibfk_11");

                    b.HasOne("BluePillCRM.Datas.Entities.Taxis", "Taxes")
                        .WithMany("Orders")
                        .HasForeignKey("TaxesId")
                        .IsRequired()
                        .HasConstraintName("orders_ibfk_5");

                    b.Navigation("AccessLevelNavigation");

                    b.Navigation("Account");

                    b.Navigation("Contact");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("PaymentMethodNavigation");

                    b.Navigation("Quote");

                    b.Navigation("SendMethod");

                    b.Navigation("Taxes");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.OrdersProduct", b =>
                {
                    b.HasOne("BluePillCRM.Datas.Entities.User", "CreatedByNavigation")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("orders_products_ibfk_4");

                    b.HasOne("BluePillCRM.Datas.Entities.Order", "Orders")
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .IsRequired()
                        .HasConstraintName("orders_products_ibfk_1");

                    b.HasOne("BluePillCRM.Datas.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("orders_products_ibfk_2");

                    b.HasOne("BluePillCRM.Datas.Entities.Taxis", "Taxes")
                        .WithMany()
                        .HasForeignKey("TaxesId")
                        .IsRequired()
                        .HasConstraintName("orders_products_ibfk_3");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "UpdatedByNavigation")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .HasConstraintName("orders_products_ibfk_5");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Orders");

                    b.Navigation("Product");

                    b.Navigation("Taxes");

                    b.Navigation("UpdatedByNavigation");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Product", b =>
                {
                    b.HasOne("BluePillCRM.Datas.Entities.User", "CreatedByNavigation")
                        .WithMany("ProductCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("products_ibfk_2");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "UpdatedByNavigation")
                        .WithMany("ProductUpdatedByNavigations")
                        .HasForeignKey("UpdatedBy")
                        .HasConstraintName("products_ibfk_1");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("UpdatedByNavigation");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Quote", b =>
                {
                    b.HasOne("BluePillCRM.Datas.Entities.Role", "AccessLevelNavigation")
                        .WithMany("Quotes")
                        .HasForeignKey("AccessLevel")
                        .IsRequired()
                        .HasConstraintName("quotes_ibfk_5");

                    b.HasOne("BluePillCRM.Datas.Entities.Account", "Account")
                        .WithMany("Quotes")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("quotes_ibfk_1");

                    b.HasOne("BluePillCRM.Datas.Entities.Contact", "Contact")
                        .WithMany("Quotes")
                        .HasForeignKey("ContactId")
                        .HasConstraintName("quotes_ibfk_2");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "CreatedByNavigation")
                        .WithMany("QuoteCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("quotes_ibfk_6");

                    b.HasOne("BluePillCRM.Datas.Entities.PaymentMethod", "PaymentMethodNavigation")
                        .WithMany("Quotes")
                        .HasForeignKey("PaymentMethod")
                        .IsRequired()
                        .HasConstraintName("quotes_ibfk_4");

                    b.HasOne("BluePillCRM.Datas.Entities.SendMethod", "SendMethod")
                        .WithMany("Quotes")
                        .HasForeignKey("SendMethodId")
                        .HasConstraintName("quotes_ibfk_8");

                    b.HasOne("BluePillCRM.Datas.Entities.Taxis", "Taxes")
                        .WithMany("Quotes")
                        .HasForeignKey("TaxesId")
                        .IsRequired()
                        .HasConstraintName("quotes_ibfk_3");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "UpdatedByNavigation")
                        .WithMany("QuoteUpdatedByNavigations")
                        .HasForeignKey("UpdatedBy")
                        .HasConstraintName("quotes_ibfk_7");

                    b.Navigation("AccessLevelNavigation");

                    b.Navigation("Account");

                    b.Navigation("Contact");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("PaymentMethodNavigation");

                    b.Navigation("SendMethod");

                    b.Navigation("Taxes");

                    b.Navigation("UpdatedByNavigation");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.QuotesProduct", b =>
                {
                    b.HasOne("BluePillCRM.Datas.Entities.User", "CreatedByNavigation")
                        .WithMany("QuotesProductCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("quotes_products_ibfk_6");

                    b.HasOne("BluePillCRM.Datas.Entities.Product", "Product")
                        .WithMany("QuotesProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("quotes_products_ibfk_2");

                    b.HasOne("BluePillCRM.Datas.Entities.Quote", "Quote")
                        .WithMany("QuotesProducts")
                        .HasForeignKey("QuoteId")
                        .IsRequired()
                        .HasConstraintName("quotes_products_ibfk_1");

                    b.HasOne("BluePillCRM.Datas.Entities.Taxis", "Taxes")
                        .WithMany("QuotesProducts")
                        .HasForeignKey("TaxesId")
                        .IsRequired()
                        .HasConstraintName("quotes_products_ibfk_5");

                    b.HasOne("BluePillCRM.Datas.Entities.User", "UpdatedByNavigation")
                        .WithMany("QuotesProductUpdatedByNavigations")
                        .HasForeignKey("UpdatedBy")
                        .HasConstraintName("quotes_products_ibfk_7");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Product");

                    b.Navigation("Quote");

                    b.Navigation("Taxes");

                    b.Navigation("UpdatedByNavigation");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.User", b =>
                {
                    b.HasOne("BluePillCRM.Datas.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("users_ibfk_1");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Account", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Invoices");

                    b.Navigation("Orders");

                    b.Navigation("Quotes");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.AccountType", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Address", b =>
                {
                    b.Navigation("AccountBillingAddresses");

                    b.Navigation("AccountDeliveryAddresses");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Contact", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Orders");

                    b.Navigation("Quotes");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Country", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Order", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.PaymentMethod", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Invoices");

                    b.Navigation("Orders");

                    b.Navigation("Quotes");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Product", b =>
                {
                    b.Navigation("QuotesProducts");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Quote", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("QuotesProducts");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Role", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Contacts");

                    b.Navigation("Invoices");

                    b.Navigation("Orders");

                    b.Navigation("Quotes");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.SendMethod", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Orders");

                    b.Navigation("Quotes");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.Taxis", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Quotes");

                    b.Navigation("QuotesProducts");
                });

            modelBuilder.Entity("BluePillCRM.Datas.Entities.User", b =>
                {
                    b.Navigation("AccountCreatedByNavigations");

                    b.Navigation("AccountLastModifiedByNavigations");

                    b.Navigation("AccountOwners");

                    b.Navigation("ContactCreatedByNavigations");

                    b.Navigation("ContactModifiedByNavigations");

                    b.Navigation("ContactOwners");

                    b.Navigation("InvoiceCreatedByNavigations");

                    b.Navigation("InvoiceUpdatedByNavigations");

                    b.Navigation("OrderCreatedByNavigations");

                    b.Navigation("OrderModifiedByNavigations");

                    b.Navigation("ProductCreatedByNavigations");

                    b.Navigation("ProductUpdatedByNavigations");

                    b.Navigation("QuoteCreatedByNavigations");

                    b.Navigation("QuoteUpdatedByNavigations");

                    b.Navigation("QuotesProductCreatedByNavigations");

                    b.Navigation("QuotesProductUpdatedByNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
